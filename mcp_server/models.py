# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T03:51:57+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field


class AssociatedNames(BaseModel):
    names: Optional[List[str]] = Field(None, examples=[['names', 'names']])
    status: Optional[str] = Field(
        None, examples=['Enterprise Plus or higher required.']
    )


class AssociatedPhoneNumbers(BaseModel):
    phone_numbers: Optional[List[str]] = Field(
        None, examples=[['phone_numbers', 'phone_numbers']]
    )
    status: Optional[str] = Field(
        None, examples=['Enterprise Plus or higher required.']
    )


class DomainAge(BaseModel):
    human: Optional[str] = Field(None, examples=['9 years ago'])
    iso: Optional[str] = Field(None, examples=['2013-09-10T14:18:53-04:00'])
    timestamp: Optional[float] = Field(None, examples=[1378837133])


class FirstSeen(BaseModel):
    human: Optional[str] = Field(None, examples=['9 years ago'])
    iso: Optional[str] = Field(None, examples=['2013-09-10T14:18:53-04:00'])
    timestamp: Optional[float] = Field(None, examples=[1378837133])


class JsonEmailYOURAPIKEYHEREUSEREMAILHEREGetResponse(BaseModel):
    associated_names: Optional[AssociatedNames] = None
    associated_phone_numbers: Optional[AssociatedPhoneNumbers] = None
    catch_all: Optional[bool] = Field(None, examples=[True])
    common: Optional[bool] = Field(None, examples=[False])
    deliverability: Optional[str] = Field(None, examples=['high.'])
    disposable: Optional[bool] = Field(None, examples=[False])
    dns_valid: Optional[bool] = Field(None, examples=[True])
    domain_age: Optional[DomainAge] = None
    domain_velocity: Optional[str] = Field(None, examples=['none'])
    first_name: Optional[str] = Field(None, examples=['Success.'])
    first_seen: Optional[FirstSeen] = None
    fraud_score: Optional[float] = Field(None, examples=[1])
    frequent_complainer: Optional[bool] = Field(None, examples=[False])
    generic: Optional[bool] = Field(None, examples=[False])
    honeypot: Optional[bool] = Field(None, examples=[False])
    leaked: Optional[bool] = Field(None, examples=[False])
    message: Optional[str] = Field(None, examples=['Success.'])
    overall_score: Optional[float] = Field(None, examples=[2])
    recent_abuse: Optional[bool] = Field(None, examples=[False])
    request_id: Optional[str] = Field(None, examples=['8cib1Ircsadw3gB'])
    sanitized_email: Optional[str] = Field(None, examples=['example@example.com'])
    smtp_score: Optional[float] = Field(None, examples=[5])
    spam_trap_score: Optional[str] = Field(None, examples=['none.'])
    success: Optional[bool] = Field(None, examples=[True])
    suggested_domain: Optional[str] = Field(None, examples=['N/A'])
    suspect: Optional[bool] = Field(None, examples=[False])
    timed_out: Optional[bool] = Field(None, examples=[True])
    user_activity: Optional[str] = Field(None, examples=['Enterprise L4+ required.'])
    valid: Optional[bool] = Field(None, examples=[True])


class JsonEmailYOURAPIKEYHEREUSEREMAILHEREGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'You have insufficient credits to make this query. Please contact IPQualityScore support if this error persists.'
        ],
    )
    request_id: Optional[str] = Field(None, examples=['4OTORR352FU0p'])
    success: Optional[bool] = Field(None, examples=[False])


class AssociatedEmailAddresses(BaseModel):
    emails: Optional[List[str]] = Field(None, examples=[['names', 'names']])
    status: Optional[str] = Field(None, examples=['No associated emails found.'])


class JsonPhoneYOURAPIKEYHEREUSERPHONEHEREGetResponse(BaseModel):
    VOIP: Optional[bool] = Field(None, examples=[True])
    active: Optional[bool] = Field(None, examples=[True])
    active_status: Optional[str] = Field(None, examples=['N/A'])
    associated_email_addresses: Optional[AssociatedEmailAddresses] = None
    carrier: Optional[str] = Field(None, examples=['ONVOY, LLC'])
    city: Optional[str] = Field(None, examples=['SEATTLE'])
    country: Optional[str] = Field(None, examples=['US'])
    dialing_code: Optional[float] = Field(None, examples=[1])
    do_not_call: Optional[bool] = Field(None, examples=[False])
    formatted: Optional[str] = Field(None, examples=['+3234232342'])
    fraud_score: Optional[float] = Field(None, examples=[100])
    leaked: Optional[bool] = Field(None, examples=[False])
    line_type: Optional[str] = Field(None, examples=['VOIP'])
    local_format: Optional[str] = Field(None, examples=['(206) 456-3059'])
    mcc: Optional[str] = Field(None, examples=['N/A'])
    message: Optional[str] = Field(None, examples=['Success.'])
    mnc: Optional[str] = Field(None, examples=['N/A'])
    name: Optional[str] = Field(None, examples=['N/A'])
    prepaid: Optional[str] = Field(None, examples=['tempor ea proident quis'])
    recent_abuse: Optional[bool] = Field(None, examples=[True])
    region: Optional[str] = Field(None, examples=['WA'])
    request_id: Optional[str] = Field(None, examples=['8ctDi1gwuP'])
    risky: Optional[bool] = Field(None, examples=[True])
    sms_domain: Optional[str] = Field(None, examples=['N/A'])
    sms_email: Optional[str] = Field(None, examples=['N/A'])
    spammer: Optional[bool] = Field(None, examples=[False])
    success: Optional[bool] = Field(None, examples=[True])
    timezone: Optional[str] = Field(None, examples=['America/Los_Angeles'])
    user_activity: Optional[str] = Field(None, examples=['Enterprise L4+ required.'])
    valid: Optional[bool] = Field(None, examples=[True])
    zip_code: Optional[str] = Field(None, examples=['98104'])


class JsonPhoneYOURAPIKEYHEREUSERPHONEHEREGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'You have insufficient credits to make this query. Please contact IPQualityScore support if this error persists.'
        ],
    )
    request_id: Optional[str] = Field(None, examples=['4OTORR352FU0p'])
    success: Optional[bool] = Field(None, examples=[False])


class DomainAge1(BaseModel):
    human: Optional[str] = Field(None, examples=['3 months ago'])
    iso: Optional[str] = Field(None, examples=['2019-09-09T16:40:34-04:00'])
    timestamp: Optional[float] = Field(None, examples=[1568061634])


class JsonUrlYOURAPIKEYHEREURLHEREGetResponse(BaseModel):
    adult: Optional[bool] = Field(None, examples=[False])
    category: Optional[str] = Field(None, examples=['Search Engine'])
    content_type: Optional[str] = Field(None, examples=['text/html; charset=UTF-8'])
    dns_valid: Optional[bool] = Field(None, examples=[True])
    domain: Optional[str] = Field(None, examples=['google.com'])
    domain_age: Optional[DomainAge1] = None
    domain_rank: Optional[float] = Field(None, examples=[1])
    ip_address: Optional[str] = Field(None, examples=['172.217.7.206'])
    malware: Optional[bool] = Field(None, examples=[False])
    message: Optional[str] = Field(None, examples=['Success.'])
    page_size: Optional[float] = Field(None, examples=[68553])
    parking: Optional[bool] = Field(None, examples=[False])
    phishing: Optional[bool] = Field(None, examples=[False])
    request_id: Optional[str] = Field(None, examples=['4ZGSfWu9RDf3oH'])
    risk_score: Optional[float] = Field(None, examples=[0])
    server: Optional[str] = Field(None, examples=['nginx'])
    spamming: Optional[bool] = Field(None, examples=[False])
    status_code: Optional[float] = Field(None, examples=[200])
    success: Optional[bool] = Field(None, examples=[True])
    suspicious: Optional[bool] = Field(None, examples=[False])
    unsafe: Optional[bool] = Field(None, examples=[True])


class JsonUrlYOURAPIKEYHEREURLHEREGetResponse1(BaseModel):
    message: Optional[str] = Field(
        None,
        examples=[
            'You have insufficient credits to make this query. Please contact IPQualityScore support if this error persists.'
        ],
    )
    request_id: Optional[str] = Field(None, examples=['4OTORR352FU0p'])
    success: Optional[bool] = Field(None, examples=[False])
